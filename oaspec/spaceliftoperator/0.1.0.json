{"definitions": {"io.spacelift.app.v1beta1.Space": {"description": "Space is the Schema for the Spaces API", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.spacelift.app.v1beta1.SpaceSpec", "description": "SpaceSpec defines the desired state of space"}, "status": {"$ref": "#/definitions/io.spacelift.app.v1beta1.SpaceStatus", "description": ""}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.spacelift.app", "version": "v1beta1", "kind": "Space"}]}, "io.spacelift.app.v1beta1.SpaceSpec": {"description": "SpaceSpec defines the desired state of space", "properties": {"description": {"type": "string"}, "inheritEntities": {"type": "boolean"}, "labels": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.SpaceSpecLabels"}, "description": "", "manifests_processed": true}, "name": {"type": "string"}, "parentSpace": {"minLength": 1, "type": "string"}}, "required": ["parentSpace"], "type": "object"}, "io.spacelift.app.v1beta1.SpaceStatus": {"properties": {"id": {"type": "string"}}, "type": "object", "description": ""}, "io.spacelift.app.v1beta1.SpaceSpecLabels": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.Context": {"description": "Context is the Schema for the contexts API", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpec", "description": "ContextSpec defines the desired state of Context"}, "status": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextStatus", "description": "ContextStatus defines the observed state of Context"}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.spacelift.app", "version": "v1beta1", "kind": "Context"}]}, "io.spacelift.app.v1beta1.ContextSpec": {"description": "ContextSpec defines the desired state of Context", "properties": {"attachments": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecAttachments"}, "description": "", "manifests_processed": true}, "description": {"type": "string"}, "environment": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecEnvironment"}, "description": "", "manifests_processed": true}, "hooks": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooks", "description": ""}, "labels": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecLabels"}, "description": "", "manifests_processed": true}, "mountedFiles": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecMountedfiles"}, "description": "", "manifests_processed": true}, "name": {"type": "string"}, "spaceId": {"minLength": 1, "type": "string"}, "spaceName": {"minLength": 1, "type": "string"}}, "type": "object", "x-kubernetes-validations": [{"message": "only one of spaceName or spaceId should be set", "rule": "has(self.spaceId) != has(self.spaceName)"}]}, "io.spacelift.app.v1beta1.ContextStatus": {"description": "ContextStatus defines the observed state of Context", "properties": {"id": {"type": "string"}}, "required": ["id"], "type": "object"}, "io.spacelift.app.v1beta1.ContextSpecAttachments": {"items": {"properties": {"moduleId": {"minLength": 1, "type": "string"}, "priority": {"type": "integer"}, "stackId": {"minLength": 1, "type": "string"}, "stackName": {"minLength": 1, "type": "string"}}, "type": "object", "x-kubernetes-validations": [{"message": "only one of stackName or stackId or moduleId should be set", "rule": "has(self.stackName) != has(self.stackId) != has(self.moduleId)"}]}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecEnvironment": {"items": {"properties": {"description": {"type": "string"}, "id": {"minLength": 1, "pattern": "^[a-zA-Z_]+[a-zA-Z0-9_]*$", "type": "string"}, "secret": {"type": "boolean"}, "value": {"type": "string"}, "valueFromSecret": {"description": "SecretKeySelector selects a key of a Secret.", "properties": {"key": {"description": "The key of the secret to select from.  Must be a valid secret key.", "type": "string"}, "name": {"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?", "type": "string"}, "optional": {"description": "Specify whether the Secret or its key must be defined", "type": "boolean"}}, "required": ["key"], "type": "object", "x-kubernetes-map-type": "atomic"}}, "required": ["id"], "type": "object", "x-kubernetes-validations": [{"message": "only one of value or valueFromSecret should be set", "rule": "has(self.valueFromSecret) != has(self.value)"}]}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooks": {"properties": {"afterApply": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterapply"}, "description": "", "manifests_processed": true}, "afterDestroy": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterdestroy"}, "description": "", "manifests_processed": true}, "afterInit": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterinit"}, "description": "", "manifests_processed": true}, "afterPerform": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterperform"}, "description": "", "manifests_processed": true}, "afterPlan": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterplan"}, "description": "", "manifests_processed": true}, "afterRun": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksAfterrun"}, "description": "", "manifests_processed": true}, "beforeApply": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksBeforeapply"}, "description": "", "manifests_processed": true}, "beforeDestroy": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksBeforedestroy"}, "description": "", "manifests_processed": true}, "beforeInit": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksBeforeinit"}, "description": "", "manifests_processed": true}, "beforePerform": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksBeforeperform"}, "description": "", "manifests_processed": true}, "beforePlan": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.ContextSpecHooksBeforeplan"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.spacelift.app.v1beta1.ContextSpecLabels": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecMountedfiles": {"items": {"properties": {"description": {"type": "string"}, "id": {"minLength": 1, "type": "string"}, "secret": {"type": "boolean"}, "value": {"type": "string"}, "valueFromSecret": {"description": "SecretKeySelector selects a key of a Secret.", "properties": {"key": {"description": "The key of the secret to select from.  Must be a valid secret key.", "type": "string"}, "name": {"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?", "type": "string"}, "optional": {"description": "Specify whether the Secret or its key must be defined", "type": "boolean"}}, "required": ["key"], "type": "object", "x-kubernetes-map-type": "atomic"}}, "required": ["id"], "type": "object", "x-kubernetes-validations": [{"message": "only one of value or valueFromSecret should be set", "rule": "has(self.valueFromSecret) != has(self.value)"}]}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterapply": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterdestroy": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterinit": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterperform": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterplan": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksAfterrun": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksBeforeapply": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksBeforedestroy": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksBeforeinit": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksBeforeperform": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.ContextSpecHooksBeforeplan": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.Policy": {"description": "Policy is the Schema for the policies API", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.spacelift.app.v1beta1.PolicySpec", "description": "PolicySpec defines the desired state of Policy"}, "status": {"$ref": "#/definitions/io.spacelift.app.v1beta1.PolicyStatus", "description": "PolicyStatus defines the observed state of Policy"}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.spacelift.app", "version": "v1beta1", "kind": "Policy"}]}, "io.spacelift.app.v1beta1.PolicySpec": {"description": "PolicySpec defines the desired state of Policy", "properties": {"attachedStacksIds": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.PolicySpecAttachedstacksids"}, "description": "", "manifests_processed": true}, "attachedStacksNames": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.PolicySpecAttachedstacksnames"}, "description": "", "manifests_processed": true}, "body": {"description": "Body of the policy", "minLength": 1, "type": "string"}, "description": {"description": "Description of the policy", "type": "string"}, "labels": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.PolicySpecLabels"}, "description": "", "manifests_processed": true}, "name": {"description": "Name of the policy - should be unique in one account", "type": "string"}, "spaceId": {"description": "SpaceId is ID (slug) of the space the policy is in", "type": "string"}, "spaceName": {"description": "SpaceName is Name of a Space kubernetes resource of the space the policy is in", "type": "string"}, "type": {"description": "Type of the policy. Possible values are ACCESS, APPROVAL, GIT_PUSH, INITIALIZATION, LOGIN, PLAN, TASK, TRIGGER and NOTIFICATION. Deprecated values are STACK_ACCESS (use ACCESS instead), TASK_RUN (use TASK instead), and TERRAFORM_PLAN (use PLAN instead).", "enum": ["ACCESS", "APPROVAL", "GIT_PUSH", "INITIALIZATION", "LOGIN", "PLAN", "TASK", "TRIGGER", "NOTIFICATION"], "type": "string"}}, "required": ["body", "type"], "type": "object", "x-kubernetes-validations": [{"message": "only one of spaceName or spaceId can be set", "rule": "(has(self.spaceName) != has(self.spaceId)) || (!has(self.spaceName) && !has(self.spaceId))"}]}, "io.spacelift.app.v1beta1.PolicyStatus": {"description": "PolicyStatus defines the observed state of Policy", "properties": {"id": {"type": "string"}}, "required": ["id"], "type": "object"}, "io.spacelift.app.v1beta1.PolicySpecAttachedstacksids": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.PolicySpecAttachedstacksnames": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.PolicySpecLabels": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.Stack": {"description": "Stack is the Schema for the stacks API", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpec", "description": "StackSpec defines the desired state of Stack"}, "status": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackStatus", "description": "StackStatus defines the observed state of Stack"}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.spacelift.app", "version": "v1beta1", "kind": "Stack"}]}, "io.spacelift.app.v1beta1.StackSpec": {"description": "StackSpec defines the desired state of Stack", "properties": {"additionalProjectGlobs": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAdditionalprojectglobs"}, "description": "", "manifests_processed": true}, "administrative": {"type": "boolean"}, "afterApply": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterapply"}, "description": "", "manifests_processed": true}, "afterDestroy": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterdestroy"}, "description": "", "manifests_processed": true}, "afterInit": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterinit"}, "description": "", "manifests_processed": true}, "afterPerform": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterperform"}, "description": "", "manifests_processed": true}, "afterPlan": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterplan"}, "description": "", "manifests_processed": true}, "afterRun": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAfterrun"}, "description": "", "manifests_processed": true}, "autodeploy": {"type": "boolean"}, "autoretry": {"type": "boolean"}, "awsIntegration": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecAwsintegration", "description": ""}, "beforeApply": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecBeforeapply"}, "description": "", "manifests_processed": true}, "beforeDestroy": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecBeforedestroy"}, "description": "", "manifests_processed": true}, "beforeInit": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecBeforeinit"}, "description": "", "manifests_processed": true}, "beforePerform": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecBeforeperform"}, "description": "", "manifests_processed": true}, "beforePlan": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecBeforeplan"}, "description": "", "manifests_processed": true}, "branch": {"type": "string"}, "commitSHA": {"minLength": 1, "type": "string"}, "description": {"type": "string"}, "githubActionDeploy": {"type": "boolean"}, "isDisabled": {"type": "boolean"}, "labels": {"type": "array", "items": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecLabels"}, "description": "", "manifests_processed": true}, "localPreviewEnabled": {"type": "boolean"}, "managesStateFile": {"description": "In our API managesStateFile is not part of StackInput", "type": "boolean"}, "name": {"type": "string"}, "projectRoot": {"type": "string"}, "protectFromDeletion": {"type": "boolean"}, "provider": {"type": "string"}, "repository": {"type": "string"}, "repositoryURL": {"type": "string"}, "runnerImage": {"type": "string"}, "spaceId": {"type": "string"}, "spaceName": {"type": "string"}, "terraformVersion": {"type": "string"}, "vcsIntegrationId": {"type": "string"}, "vendorConfig": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfig", "description": ""}, "workerPool": {"type": "string"}}, "required": ["repository"], "type": "object", "x-kubernetes-validations": [{"message": "only one of spaceName or spaceId can be set", "rule": "has(self.spaceName) != has(self.spaceId)"}]}, "io.spacelift.app.v1beta1.StackStatus": {"description": "StackStatus defines the observed state of Stack", "properties": {"id": {"type": "string"}}, "type": "object"}, "io.spacelift.app.v1beta1.StackSpecAdditionalprojectglobs": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterapply": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterdestroy": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterinit": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterperform": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterplan": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAfterrun": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecAwsintegration": {"properties": {"id": {"type": "string"}, "read": {"type": "boolean"}, "write": {"type": "boolean"}}, "required": ["id", "read", "write"], "type": "object"}, "io.spacelift.app.v1beta1.StackSpecBeforeapply": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecBeforedestroy": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecBeforeinit": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecBeforeperform": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecBeforeplan": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecLabels": {"items": {"type": "string"}, "type": "array"}, "io.spacelift.app.v1beta1.StackSpecVendorconfig": {"properties": {"ansible": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigAnsible", "description": ""}, "cloudFormation": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigCloudformation", "description": ""}, "kubernetes": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigKubernetes", "description": ""}, "pulumi": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigPulumi", "description": ""}, "terraform": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigTerraform", "description": ""}, "terragrunt": {"$ref": "#/definitions/io.spacelift.app.v1beta1.StackSpecVendorconfigTerragrunt", "description": ""}}, "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigAnsible": {"properties": {"playbook": {"type": "string"}}, "required": ["playbook"], "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigCloudformation": {"properties": {"entryTemplateFile": {"type": "string"}, "region": {"type": "string"}, "stackName": {"type": "string"}, "templateBucket": {"type": "string"}}, "required": ["entryTemplateFile", "region", "stackName", "templateBucket"], "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigKubernetes": {"properties": {"kubectlVersion": {"type": "string"}, "namespace": {"type": "string"}}, "required": ["namespace"], "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigPulumi": {"properties": {"loginURL": {"type": "string"}, "stackName": {"type": "string"}}, "required": ["loginURL", "stackName"], "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigTerraform": {"properties": {"externalStateAccessEnabled": {"type": "boolean"}, "useSmartSanitization": {"type": "boolean"}, "version": {"type": "string"}, "workflowTool": {"type": "string"}, "workspace": {"type": "string"}}, "type": "object"}, "io.spacelift.app.v1beta1.StackSpecVendorconfigTerragrunt": {"properties": {"terraformVersion": {"type": "string"}, "terragruntVersion": {"type": "string"}, "useRunAll": {"type": "boolean"}, "useSmartSanitization": {"type": "boolean"}}, "required": ["terraformVersion", "terragruntVersion", "useRunAll", "useSmartSanitization"], "type": "object"}, "io.spacelift.app.v1beta1.Run": {"description": "Run is the Schema for the runs API", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.spacelift.app.v1beta1.RunSpec", "description": "RunSpec defines the desired state of Run"}, "status": {"$ref": "#/definitions/io.spacelift.app.v1beta1.RunStatus", "description": "RunStatus defines the observed state of Run"}}, "required": ["spec"], "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.spacelift.app", "version": "v1beta1", "kind": "Run"}]}, "io.spacelift.app.v1beta1.RunSpec": {"description": "RunSpec defines the desired state of Run", "properties": {"createSecretFromStackOutput": {"type": "boolean"}, "stackName": {"description": "StackName is the name of the stack for this run, this is mandatory", "minLength": 1, "type": "string"}}, "required": ["stackName"], "type": "object"}, "io.spacelift.app.v1beta1.RunStatus": {"description": "RunStatus defines the observed state of Run", "properties": {"id": {"description": "Id is the run ULID on Spacelift", "type": "string"}, "stackId": {"type": "string"}, "state": {"description": "State is the run state, see RunState for all possibles state of a run", "type": "string"}}, "type": "object"}}}