{"definitions": {"io.cattle.fleet.v1alpha1.Bundle": {"properties": {"spec": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpec", "description": ""}, "status": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatus", "description": ""}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.fleet", "version": "v1alpha1", "kind": "Bundle"}], "description": ""}, "io.cattle.fleet.v1alpha1.Cluster": {"properties": {"spec": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpec", "description": ""}, "status": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatus", "description": ""}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.fleet", "version": "v1alpha1", "kind": "Cluster"}], "description": ""}, "io.cattle.fleet.v1alpha1.ClusterGroup": {"properties": {"spec": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupSpec", "description": ""}, "status": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatus", "description": ""}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.fleet", "version": "v1alpha1", "kind": "ClusterGroup"}], "description": ""}, "io.cattle.fleet.v1alpha1.BundleSpec": {"properties": {"defaultNamespace": {"nullable": true, "type": "string"}, "dependsOn": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecDependson"}, "description": "", "manifests_processed": true}, "diff": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecDiff", "description": ""}, "forceSyncGeneration": {"type": "integer"}, "helm": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecHelm", "description": ""}, "ignore": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecIgnore", "description": ""}, "keepResources": {"type": "boolean"}, "kustomize": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecKustomize", "description": ""}, "namespace": {"nullable": true, "type": "string"}, "paused": {"type": "boolean"}, "resources": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecResources"}, "description": "", "manifests_processed": true}, "rolloutStrategy": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecRolloutstrategy", "description": ""}, "serviceAccount": {"nullable": true, "type": "string"}, "targetRestrictions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecTargetrestrictions"}, "description": "", "manifests_processed": true}, "targets": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecTargets"}, "description": "", "manifests_processed": true}, "yaml": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecYaml", "description": ""}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.BundleStatus": {"properties": {"conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusConditions"}, "description": "", "manifests_processed": true}, "display": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusDisplay", "description": ""}, "maxNew": {"type": "integer"}, "maxUnavailable": {"type": "integer"}, "maxUnavailablePartitions": {"type": "integer"}, "newlyCreated": {"type": "integer"}, "observedGeneration": {"type": "integer"}, "partitions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusPartitions"}, "description": "", "manifests_processed": true}, "resourceKey": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusResourcekey"}, "description": "", "manifests_processed": true}, "summary": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusSummary", "description": ""}, "unavailable": {"type": "integer"}, "unavailablePartitions": {"type": "integer"}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.ClusterSpec": {"properties": {"agentAffinity": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinity", "description": ""}, "agentEnvVars": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentenvvars"}, "description": "", "manifests_processed": true}, "agentNamespace": {"nullable": true, "type": "string"}, "agentResources": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentresources", "description": ""}, "agentTolerations": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgenttolerations"}, "description": "", "manifests_processed": true}, "clientID": {"nullable": true, "type": "string"}, "kubeConfigSecret": {"nullable": true, "type": "string"}, "paused": {"type": "boolean"}, "privateRepoURL": {"nullable": true, "type": "string"}, "redeployAgentGeneration": {"type": "integer"}, "templateValues": {"nullable": true, "type": "object", "x-kubernetes-preserve-unknown-fields": true}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.ClusterStatus": {"properties": {"agent": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusAgent", "description": ""}, "agentAffinityHash": {"nullable": true, "type": "string"}, "agentDeployedGeneration": {"nullable": true, "type": "integer"}, "agentEnvVarsHash": {"nullable": true, "type": "string"}, "agentMigrated": {"type": "boolean"}, "agentNamespaceMigrated": {"type": "boolean"}, "agentPrivateRepoURL": {"nullable": true, "type": "string"}, "agentResourcesHash": {"nullable": true, "type": "string"}, "agentTolerationsHash": {"nullable": true, "type": "string"}, "cattleNamespaceMigrated": {"type": "boolean"}, "conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusConditions"}, "description": "", "manifests_processed": true}, "desiredReadyGitRepos": {"type": "integer"}, "display": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusDisplay", "description": ""}, "namespace": {"nullable": true, "type": "string"}, "readyGitRepos": {"type": "integer"}, "resourceCounts": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusResourcecounts", "description": ""}, "summary": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusSummary", "description": ""}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.ClusterGroupSpec": {"properties": {"selector": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupSpecSelector", "description": ""}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.ClusterGroupStatus": {"properties": {"clusterCount": {"type": "integer"}, "conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusConditions"}, "description": "", "manifests_processed": true}, "display": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusDisplay", "description": ""}, "nonReadyClusterCount": {"type": "integer"}, "nonReadyClusters": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusNonreadyclusters"}, "description": "", "manifests_processed": true}, "resourceCounts": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusResourcecounts", "description": ""}, "summary": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusSummary", "description": ""}}, "type": "object", "description": ""}, "io.cattle.fleet.v1alpha1.BundleSpecDependson": {"items": {"properties": {"name": {"nullable": true, "type": "string"}, "selector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecDiff": {"nullable": true, "properties": {"comparePatches": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecDiffComparepatches"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecHelm": {"nullable": true, "properties": {"atomic": {"type": "boolean"}, "chart": {"nullable": true, "type": "string"}, "disablePreProcess": {"type": "boolean"}, "force": {"type": "boolean"}, "maxHistory": {"type": "integer"}, "releaseName": {"nullable": true, "type": "string"}, "repo": {"nullable": true, "type": "string"}, "takeOwnership": {"type": "boolean"}, "timeoutSeconds": {"type": "integer"}, "values": {"nullable": true, "type": "object", "x-kubernetes-preserve-unknown-fields": true}, "valuesFiles": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecHelmValuesfiles"}, "description": "", "manifests_processed": true}, "valuesFrom": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecHelmValuesfrom"}, "description": "", "manifests_processed": true}, "version": {"nullable": true, "type": "string"}, "waitForJobs": {"type": "boolean"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecIgnore": {"properties": {"conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecIgnoreConditions"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecKustomize": {"nullable": true, "properties": {"dir": {"nullable": true, "type": "string"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecResources": {"items": {"properties": {"content": {"nullable": true, "type": "string"}, "encoding": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecRolloutstrategy": {"nullable": true, "properties": {"autoPartitionSize": {"nullable": true, "type": "string"}, "maxUnavailable": {"nullable": true, "type": "string"}, "maxUnavailablePartitions": {"nullable": true, "type": "string"}, "partitions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecRolloutstrategyPartitions"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecTargetrestrictions": {"items": {"properties": {"clusterGroup": {"nullable": true, "type": "string"}, "clusterGroupSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "clusterName": {"nullable": true, "type": "string"}, "clusterSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "name": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecTargets": {"items": {"properties": {"clusterGroup": {"nullable": true, "type": "string"}, "clusterGroupSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "clusterName": {"nullable": true, "type": "string"}, "clusterSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "defaultNamespace": {"nullable": true, "type": "string"}, "diff": {"nullable": true, "properties": {"comparePatches": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "jsonPointers": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "operations": {"items": {"properties": {"op": {"nullable": true, "type": "string"}, "path": {"nullable": true, "type": "string"}, "value": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "forceSyncGeneration": {"type": "integer"}, "helm": {"nullable": true, "properties": {"atomic": {"type": "boolean"}, "chart": {"nullable": true, "type": "string"}, "disablePreProcess": {"type": "boolean"}, "force": {"type": "boolean"}, "maxHistory": {"type": "integer"}, "releaseName": {"nullable": true, "type": "string"}, "repo": {"nullable": true, "type": "string"}, "takeOwnership": {"type": "boolean"}, "timeoutSeconds": {"type": "integer"}, "values": {"nullable": true, "type": "object", "x-kubernetes-preserve-unknown-fields": true}, "valuesFiles": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "valuesFrom": {"items": {"properties": {"configMapKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}}, "type": "object"}, "secretKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}}, "type": "object"}}, "type": "object"}, "nullable": true, "type": "array"}, "version": {"nullable": true, "type": "string"}, "waitForJobs": {"type": "boolean"}}, "type": "object"}, "ignore": {"properties": {"conditions": {"items": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "keepResources": {"type": "boolean"}, "kustomize": {"nullable": true, "properties": {"dir": {"nullable": true, "type": "string"}}, "type": "object"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "serviceAccount": {"nullable": true, "type": "string"}, "yaml": {"nullable": true, "properties": {"overlays": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecYaml": {"nullable": true, "properties": {"overlays": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleSpecYamlOverlays"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleStatusConditions": {"items": {"properties": {"lastTransitionTime": {"nullable": true, "type": "string"}, "lastUpdateTime": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "reason": {"nullable": true, "type": "string"}, "status": {"nullable": true, "type": "string"}, "type": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleStatusDisplay": {"properties": {"readyClusters": {"nullable": true, "type": "string"}, "state": {"nullable": true, "type": "string"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleStatusPartitions": {"items": {"properties": {"count": {"type": "integer"}, "maxUnavailable": {"type": "integer"}, "name": {"nullable": true, "type": "string"}, "summary": {"properties": {"desiredReady": {"type": "integer"}, "errApplied": {"type": "integer"}, "modified": {"type": "integer"}, "nonReadyResources": {"items": {"properties": {"bundleState": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "modifiedStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "delete": {"type": "boolean"}, "kind": {"nullable": true, "type": "string"}, "missing": {"type": "boolean"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "patch": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "name": {"nullable": true, "type": "string"}, "nonReadyStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "summary": {"properties": {"error": {"type": "boolean"}, "message": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "state": {"nullable": true, "type": "string"}, "transitioning": {"type": "boolean"}}, "type": "object"}, "uid": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "notReady": {"type": "integer"}, "outOfSync": {"type": "integer"}, "pending": {"type": "integer"}, "ready": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "unavailable": {"type": "integer"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleStatusResourcekey": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleStatusSummary": {"properties": {"desiredReady": {"type": "integer"}, "errApplied": {"type": "integer"}, "modified": {"type": "integer"}, "nonReadyResources": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.BundleStatusSummaryNonreadyresources"}, "description": "", "manifests_processed": true}, "notReady": {"type": "integer"}, "outOfSync": {"type": "integer"}, "pending": {"type": "integer"}, "ready": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinity": {"nullable": true, "properties": {"nodeAffinity": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinity", "description": ""}, "podAffinity": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinity", "description": ""}, "podAntiAffinity": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinity", "description": ""}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentenvvars": {"items": {"properties": {"name": {"nullable": true, "type": "string"}, "value": {"nullable": true, "type": "string"}, "valueFrom": {"nullable": true, "properties": {"configMapKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "optional": {"nullable": true, "type": "boolean"}}, "type": "object"}, "fieldRef": {"nullable": true, "properties": {"apiVersion": {"nullable": true, "type": "string"}, "fieldPath": {"nullable": true, "type": "string"}}, "type": "object"}, "resourceFieldRef": {"nullable": true, "properties": {"containerName": {"nullable": true, "type": "string"}, "divisor": {"nullable": true, "type": "string"}, "resource": {"nullable": true, "type": "string"}}, "type": "object"}, "secretKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "optional": {"nullable": true, "type": "boolean"}}, "type": "object"}}, "type": "object"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentresources": {"nullable": true, "properties": {"limits": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}, "requests": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgenttolerations": {"items": {"properties": {"effect": {"nullable": true, "type": "string"}, "key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "tolerationSeconds": {"nullable": true, "type": "integer"}, "value": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterStatusAgent": {"properties": {"lastSeen": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "nonReadyNodeNames": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusAgentNonreadynodenames"}, "description": "", "manifests_processed": true}, "nonReadyNodes": {"type": "integer"}, "readyNodeNames": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusAgentReadynodenames"}, "description": "", "manifests_processed": true}, "readyNodes": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterStatusConditions": {"items": {"properties": {"lastTransitionTime": {"nullable": true, "type": "string"}, "lastUpdateTime": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "reason": {"nullable": true, "type": "string"}, "status": {"nullable": true, "type": "string"}, "type": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterStatusDisplay": {"properties": {"readyBundles": {"nullable": true, "type": "string"}, "readyNodes": {"nullable": true, "type": "string"}, "sampleNode": {"nullable": true, "type": "string"}, "state": {"nullable": true, "type": "string"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterStatusResourcecounts": {"properties": {"desiredReady": {"type": "integer"}, "missing": {"type": "integer"}, "modified": {"type": "integer"}, "notReady": {"type": "integer"}, "orphaned": {"type": "integer"}, "ready": {"type": "integer"}, "unknown": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterStatusSummary": {"properties": {"desiredReady": {"type": "integer"}, "errApplied": {"type": "integer"}, "modified": {"type": "integer"}, "nonReadyResources": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterStatusSummaryNonreadyresources"}, "description": "", "manifests_processed": true}, "notReady": {"type": "integer"}, "outOfSync": {"type": "integer"}, "pending": {"type": "integer"}, "ready": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterGroupSpecSelector": {"nullable": true, "properties": {"matchExpressions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupSpecSelectorMatchexpressions"}, "description": "", "manifests_processed": true}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusConditions": {"items": {"properties": {"lastTransitionTime": {"nullable": true, "type": "string"}, "lastUpdateTime": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "reason": {"nullable": true, "type": "string"}, "status": {"nullable": true, "type": "string"}, "type": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusDisplay": {"properties": {"readyBundles": {"nullable": true, "type": "string"}, "readyClusters": {"nullable": true, "type": "string"}, "state": {"nullable": true, "type": "string"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusNonreadyclusters": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusResourcecounts": {"properties": {"desiredReady": {"type": "integer"}, "missing": {"type": "integer"}, "modified": {"type": "integer"}, "notReady": {"type": "integer"}, "orphaned": {"type": "integer"}, "ready": {"type": "integer"}, "unknown": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusSummary": {"properties": {"desiredReady": {"type": "integer"}, "errApplied": {"type": "integer"}, "modified": {"type": "integer"}, "nonReadyResources": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterGroupStatusSummaryNonreadyresources"}, "description": "", "manifests_processed": true}, "notReady": {"type": "integer"}, "outOfSync": {"type": "integer"}, "pending": {"type": "integer"}, "ready": {"type": "integer"}, "waitApplied": {"type": "integer"}}, "type": "object"}, "io.cattle.fleet.v1alpha1.BundleSpecDiffComparepatches": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "jsonPointers": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "operations": {"items": {"properties": {"op": {"nullable": true, "type": "string"}, "path": {"nullable": true, "type": "string"}, "value": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecHelmValuesfiles": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecHelmValuesfrom": {"items": {"properties": {"configMapKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}}, "type": "object"}, "secretKeyRef": {"nullable": true, "properties": {"key": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}}, "type": "object"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecIgnoreConditions": {"items": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecRolloutstrategyPartitions": {"items": {"properties": {"clusterGroup": {"nullable": true, "type": "string"}, "clusterGroupSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "clusterName": {"nullable": true, "type": "string"}, "clusterSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "maxUnavailable": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleSpecYamlOverlays": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.BundleStatusSummaryNonreadyresources": {"items": {"properties": {"bundleState": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "modifiedStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "delete": {"type": "boolean"}, "kind": {"nullable": true, "type": "string"}, "missing": {"type": "boolean"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "patch": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "name": {"nullable": true, "type": "string"}, "nonReadyStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "summary": {"properties": {"error": {"type": "boolean"}, "message": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "state": {"nullable": true, "type": "string"}, "transitioning": {"type": "boolean"}}, "type": "object"}, "uid": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinity": {"nullable": true, "properties": {"preferredDuringSchedulingIgnoredDuringExecution": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityPreferredduringschedulingignoredduringexecution"}, "description": "", "manifests_processed": true}, "requiredDuringSchedulingIgnoredDuringExecution": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityRequiredduringschedulingignoredduringexecution", "description": ""}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinity": {"nullable": true, "properties": {"preferredDuringSchedulingIgnoredDuringExecution": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinityPreferredduringschedulingignoredduringexecution"}, "description": "", "manifests_processed": true}, "requiredDuringSchedulingIgnoredDuringExecution": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinityRequiredduringschedulingignoredduringexecution"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinity": {"nullable": true, "properties": {"preferredDuringSchedulingIgnoredDuringExecution": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinityPreferredduringschedulingignoredduringexecution"}, "description": "", "manifests_processed": true}, "requiredDuringSchedulingIgnoredDuringExecution": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinityRequiredduringschedulingignoredduringexecution"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterStatusAgentNonreadynodenames": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterStatusAgentReadynodenames": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterStatusSummaryNonreadyresources": {"items": {"properties": {"bundleState": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "modifiedStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "delete": {"type": "boolean"}, "kind": {"nullable": true, "type": "string"}, "missing": {"type": "boolean"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "patch": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "name": {"nullable": true, "type": "string"}, "nonReadyStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "summary": {"properties": {"error": {"type": "boolean"}, "message": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "state": {"nullable": true, "type": "string"}, "transitioning": {"type": "boolean"}}, "type": "object"}, "uid": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterGroupSpecSelectorMatchexpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterGroupStatusSummaryNonreadyresources": {"items": {"properties": {"bundleState": {"nullable": true, "type": "string"}, "message": {"nullable": true, "type": "string"}, "modifiedStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "delete": {"type": "boolean"}, "kind": {"nullable": true, "type": "string"}, "missing": {"type": "boolean"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "patch": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "name": {"nullable": true, "type": "string"}, "nonReadyStatus": {"items": {"properties": {"apiVersion": {"nullable": true, "type": "string"}, "kind": {"nullable": true, "type": "string"}, "name": {"nullable": true, "type": "string"}, "namespace": {"nullable": true, "type": "string"}, "summary": {"properties": {"error": {"type": "boolean"}, "message": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "state": {"nullable": true, "type": "string"}, "transitioning": {"type": "boolean"}}, "type": "object"}, "uid": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityPreferredduringschedulingignoredduringexecution": {"items": {"properties": {"preference": {"properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchFields": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "weight": {"type": "integer"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityRequiredduringschedulingignoredduringexecution": {"nullable": true, "properties": {"nodeSelectorTerms": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectorterms"}, "description": "", "manifests_processed": true}}, "type": "object"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinityPreferredduringschedulingignoredduringexecution": {"items": {"properties": {"podAffinityTerm": {"properties": {"labelSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaceSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaces": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "topologyKey": {"nullable": true, "type": "string"}}, "type": "object"}, "weight": {"type": "integer"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodaffinityRequiredduringschedulingignoredduringexecution": {"items": {"properties": {"labelSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaceSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaces": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "topologyKey": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinityPreferredduringschedulingignoredduringexecution": {"items": {"properties": {"podAffinityTerm": {"properties": {"labelSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaceSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaces": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "topologyKey": {"nullable": true, "type": "string"}}, "type": "object"}, "weight": {"type": "integer"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityPodantiaffinityRequiredduringschedulingignoredduringexecution": {"items": {"properties": {"labelSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaceSelector": {"nullable": true, "properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchLabels": {"additionalProperties": {"nullable": true, "type": "string"}, "nullable": true, "type": "object"}}, "type": "object"}, "namespaces": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}, "topologyKey": {"nullable": true, "type": "string"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.fleet.v1alpha1.ClusterSpecAgentaffinityNodeaffinityRequiredduringschedulingignoredduringexecutionNodeselectorterms": {"items": {"properties": {"matchExpressions": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "matchFields": {"items": {"properties": {"key": {"nullable": true, "type": "string"}, "operator": {"nullable": true, "type": "string"}, "values": {"items": {"nullable": true, "type": "string"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}}, "type": "object"}, "nullable": true, "type": "array"}, "io.cattle.management.v3.ProjectRoleTemplateBinding": {"description": "ProjectRoleTemplateBinding is the object representing membership of a subject in a project with permissions specified by a given role template.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "groupName": {"description": "GroupName is the name of the group subject added to the project. Immutable.", "type": "string"}, "groupPrincipalName": {"description": "GroupPrincipalName is the name of the group principal subject added to the project. Immutable.", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "projectName": {"description": "ProjectName is the name of the project to which a subject is added. Immutable.", "type": "string"}, "roleTemplateName": {"description": "RoleTemplateName is the name of the role template that defines permissions to perform actions on resources in the project. Immutable.", "type": "string"}, "serviceAccount": {"description": "ServiceAccount is the name of the service account bound as a subject. Immutable. Deprecated.", "type": "string"}, "userName": {"description": "UserName is the name of the user subject added to the project. Immutable.", "type": "string"}, "userPrincipalName": {"description": "UserPrincipalName is the name of the user principal subject added to the project. Immutable.", "type": "string"}}, "required": ["projectName", "roleTemplateName"], "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "ProjectRoleTemplateBinding"}]}, "io.cattle.management.v3.Project": {"description": "Project is a group of namespaces. Projects are used to create a multi-tenant environment within a Kubernetes cluster by managing namespace operations, such as role assignments or quotas, as a group.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "spec": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpec", "description": "Spec is the specification of the desired configuration for the project."}, "status": {"$ref": "#/definitions/io.cattle.management.v3.ProjectStatus", "description": "Status is the most recently observed status of the project."}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "Project"}]}, "io.cattle.management.v3.ProjectSpec": {"description": "Spec is the specification of the desired configuration for the project.", "properties": {"clusterName": {"description": "ClusterName is the name of the cluster the project belongs to. Immutable.", "type": "string"}, "containerDefaultResourceLimit": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecContainerdefaultresourcelimit", "description": "ContainerDefaultResourceLimit is a specification for the default LimitRange for the namespace. See https://kubernetes.io/docs/concepts/policy/limit-range/ for more details."}, "description": {"description": "Description is a human-readable description of the project.", "type": "string"}, "displayName": {"description": "DisplayName is the human-readable name for the project.", "type": "string"}, "enableProjectMonitoring": {"description": "EnableProjectMonitoring indicates whether Monitoring V1 should be enabled for this project. Deprecated. Use the Monitoring V2 app instead. Defaults to false.", "type": "boolean"}, "namespaceDefaultResourceQuota": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecNamespacedefaultresourcequota", "description": "NamespaceDefaultResourceQuota is a specification of the default ResourceQuota that a namespace will receive if none is provided. Must provide ResourceQuota if NamespaceDefaultResourceQuota is specified. See https://kubernetes.io/docs/concepts/policy/resource-quotas/ for more details."}, "resourceQuota": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecResourcequota", "description": "ResourceQuota is a specification for the total amount of quota for standard resources that will be shared by all namespaces in the project. Must provide NamespaceDefaultResourceQuota if ResourceQuota is specified. See https://kubernetes.io/docs/concepts/policy/resource-quotas/ for more details."}}, "required": ["clusterName", "displayName"], "type": "object"}, "io.cattle.management.v3.ProjectStatus": {"description": "Status is the most recently observed status of the project.", "properties": {"conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.ProjectStatusConditions"}, "description": "Conditions are a set of indicators about aspects of the project.", "manifests_processed": true}, "monitoringStatus": {"$ref": "#/definitions/io.cattle.management.v3.ProjectStatusMonitoringstatus", "description": "MonitoringStatus is the status of the Monitoring V1 app."}, "podSecurityPolicyTemplateId": {"description": "PodSecurityPolicyTemplateName is the pod security policy template associated with the project.", "type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecContainerdefaultresourcelimit": {"description": "ContainerDefaultResourceLimit is a specification for the default LimitRange for the namespace. See https://kubernetes.io/docs/concepts/policy/limit-range/ for more details.", "properties": {"limitsCpu": {"description": "LimitsCPU is the CPU limits across all pods in a non-terminal state.", "type": "string"}, "limitsMemory": {"description": "LimitsMemory is the memory limits across all pods in a non-terminal state.", "type": "string"}, "requestsCpu": {"description": "RequestsCPU is the CPU requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsMemory": {"description": "RequestsMemory is the memory requests limit across all pods in a non-terminal state.", "type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecNamespacedefaultresourcequota": {"description": "NamespaceDefaultResourceQuota is a specification of the default ResourceQuota that a namespace will receive if none is provided. Must provide ResourceQuota if NamespaceDefaultResourceQuota is specified. See https://kubernetes.io/docs/concepts/policy/resource-quotas/ for more details.", "properties": {"limit": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecNamespacedefaultresourcequotaLimit", "description": "Limit is the default quota limits applied to new namespaces."}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecResourcequota": {"description": "ResourceQuota is a specification for the total amount of quota for standard resources that will be shared by all namespaces in the project. Must provide NamespaceDefaultResourceQuota if ResourceQuota is specified. See https://kubernetes.io/docs/concepts/policy/resource-quotas/ for more details.", "properties": {"limit": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecResourcequotaLimit", "description": "Limit is the total allowable quota limits shared by all namespaces in the project."}, "usedLimit": {"$ref": "#/definitions/io.cattle.management.v3.ProjectSpecResourcequotaUsedlimit", "description": "UsedLimit is the currently allocated quota for all namespaces in the project."}}, "type": "object"}, "io.cattle.management.v3.ProjectStatusConditions": {"description": "Conditions are a set of indicators about aspects of the project.", "items": {"description": "ProjectCondition is the status of an aspect of the project.", "properties": {"lastTransitionTime": {"description": "Last time the condition transitioned from one status to another.", "type": "string"}, "lastUpdateTime": {"description": "The last time this condition was updated.", "type": "string"}, "message": {"description": "Human-readable message indicating details about last transition.", "type": "string"}, "reason": {"description": "The reason for the condition's last transition.", "type": "string"}, "status": {"description": "Status of the condition, one of True, False, Unknown.", "type": "string"}, "type": {"description": "Type of project condition.", "type": "string"}}, "required": ["status", "type"], "type": "object"}, "type": "array"}, "io.cattle.management.v3.ProjectStatusMonitoringstatus": {"description": "MonitoringStatus is the status of the Monitoring V1 app.", "properties": {"conditions": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.ProjectStatusMonitoringstatusConditions"}, "description": "", "manifests_processed": true}, "grafanaEndpoint": {"type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecNamespacedefaultresourcequotaLimit": {"description": "Limit is the default quota limits applied to new namespaces.", "properties": {"configMaps": {"description": "ConfigMaps is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "limitsCpu": {"description": "LimitsCPU is the CPU limits across all pods in a non-terminal state.", "type": "string"}, "limitsMemory": {"description": "LimitsMemory is the memory limits across all pods in a non-terminal state.", "type": "string"}, "persistentVolumeClaims": {"description": "PersistentVolumeClaims is the total number of PersistentVolumeClaims that can exist in the namespace.", "type": "string"}, "pods": {"description": "Pods is the total number of Pods in a non-terminal state that can exist in the namespace. A pod is in a terminal state if .status.phase in (Failed, Succeeded) is true.", "type": "string"}, "replicationControllers": {"description": "ReplicationControllers is total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "requestsCpu": {"description": "RequestsCPU is the CPU requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsMemory": {"description": "RequestsMemory is the memory requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsStorage": {"description": "RequestsStorage is the storage requests limit across all persistent volume claims.", "type": "string"}, "secrets": {"description": "Secrets is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "services": {"description": "Services is the total number of Services that can exist in the namespace.", "type": "string"}, "servicesLoadBalancers": {"description": "ServicesLoadBalancers is the total number of Services of type LoadBalancer that can exist in the namespace.", "type": "string"}, "servicesNodePorts": {"description": "ServiceNodePorts is the total number of Services of type NodePort that can exist in the namespace.", "type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecResourcequotaLimit": {"description": "Limit is the total allowable quota limits shared by all namespaces in the project.", "properties": {"configMaps": {"description": "ConfigMaps is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "limitsCpu": {"description": "LimitsCPU is the CPU limits across all pods in a non-terminal state.", "type": "string"}, "limitsMemory": {"description": "LimitsMemory is the memory limits across all pods in a non-terminal state.", "type": "string"}, "persistentVolumeClaims": {"description": "PersistentVolumeClaims is the total number of PersistentVolumeClaims that can exist in the namespace.", "type": "string"}, "pods": {"description": "Pods is the total number of Pods in a non-terminal state that can exist in the namespace. A pod is in a terminal state if .status.phase in (Failed, Succeeded) is true.", "type": "string"}, "replicationControllers": {"description": "ReplicationControllers is total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "requestsCpu": {"description": "RequestsCPU is the CPU requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsMemory": {"description": "RequestsMemory is the memory requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsStorage": {"description": "RequestsStorage is the storage requests limit across all persistent volume claims.", "type": "string"}, "secrets": {"description": "Secrets is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "services": {"description": "Services is the total number of Services that can exist in the namespace.", "type": "string"}, "servicesLoadBalancers": {"description": "ServicesLoadBalancers is the total number of Services of type LoadBalancer that can exist in the namespace.", "type": "string"}, "servicesNodePorts": {"description": "ServiceNodePorts is the total number of Services of type NodePort that can exist in the namespace.", "type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectSpecResourcequotaUsedlimit": {"description": "UsedLimit is the currently allocated quota for all namespaces in the project.", "properties": {"configMaps": {"description": "ConfigMaps is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "limitsCpu": {"description": "LimitsCPU is the CPU limits across all pods in a non-terminal state.", "type": "string"}, "limitsMemory": {"description": "LimitsMemory is the memory limits across all pods in a non-terminal state.", "type": "string"}, "persistentVolumeClaims": {"description": "PersistentVolumeClaims is the total number of PersistentVolumeClaims that can exist in the namespace.", "type": "string"}, "pods": {"description": "Pods is the total number of Pods in a non-terminal state that can exist in the namespace. A pod is in a terminal state if .status.phase in (Failed, Succeeded) is true.", "type": "string"}, "replicationControllers": {"description": "ReplicationControllers is total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "requestsCpu": {"description": "RequestsCPU is the CPU requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsMemory": {"description": "RequestsMemory is the memory requests limit across all pods in a non-terminal state.", "type": "string"}, "requestsStorage": {"description": "RequestsStorage is the storage requests limit across all persistent volume claims.", "type": "string"}, "secrets": {"description": "Secrets is the total number of ReplicationControllers that can exist in the namespace.", "type": "string"}, "services": {"description": "Services is the total number of Services that can exist in the namespace.", "type": "string"}, "servicesLoadBalancers": {"description": "ServicesLoadBalancers is the total number of Services of type LoadBalancer that can exist in the namespace.", "type": "string"}, "servicesNodePorts": {"description": "ServiceNodePorts is the total number of Services of type NodePort that can exist in the namespace.", "type": "string"}}, "type": "object"}, "io.cattle.management.v3.ProjectStatusMonitoringstatusConditions": {"items": {"properties": {"lastTransitionTime": {"description": "Last time the condition transitioned from one status to another.", "type": "string"}, "lastUpdateTime": {"description": "The last time this condition was updated.", "type": "string"}, "message": {"description": "Human-readable message indicating details about last transition", "type": "string"}, "reason": {"description": "The reason for the condition's last transition.", "type": "string"}, "status": {"description": "Status of the condition, one of True, False, Unknown.", "type": "string"}, "type": {"description": "Type of cluster condition.", "type": "string"}}, "required": ["status", "type"], "type": "object"}, "type": "array"}, "io.cattle.management.v3.ClusterRoleTemplateBinding": {"description": "ClusterRoleTemplateBinding is the object representing membership of a subject in a cluster with permissions specified by a given role template.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "clusterName": {"description": "ClusterName is the metadata.name of the cluster to which a subject is added. Must match the namespace. Immutable.", "type": "string"}, "groupName": {"description": "GroupName is the name of the group subject added to the cluster. Immutable.", "type": "string"}, "groupPrincipalName": {"description": "GroupPrincipalName is the name of the group principal subject added to the cluster. Immutable.", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "roleTemplateName": {"description": "RoleTemplateName is the name of the role template that defines permissions to perform actions on resources in the cluster. Immutable.", "type": "string"}, "userName": {"description": "UserName is the name of the user subject added to the cluster. Immutable.", "type": "string"}, "userPrincipalName": {"description": "UserPrincipalName is the name of the user principal subject added to the cluster. Immutable.", "type": "string"}}, "required": ["clusterName", "roleTemplateName"], "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "ClusterRoleTemplateBinding"}]}, "io.cattle.management.v3.GlobalRoleBinding": {"description": "GlobalRoleBinding binds a given subject user or group to a GlobalRole.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "globalRoleName": {"description": "GlobalRoleName is the name of the Global Role that the subject will be bound to. Immutable.", "type": "string"}, "groupPrincipalName": {"description": "GroupPrincipalName is the name of the group principal subject to be bound. Immutable.", "type": "string"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "userName": {"description": "UserName is the name of the user subject to be bound. Immutable.", "type": "string"}}, "required": ["globalRoleName"], "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "GlobalRoleBinding"}]}, "io.cattle.management.v3.GlobalRole": {"description": "GlobalRole defines rules that can be applied to the local cluster and or every downstream cluster.", "properties": {"apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "builtin": {"description": "Builtin specifies that this GlobalRole was created by Rancher if true. Immutable.", "type": "boolean"}, "description": {"description": "Description holds text that describes the resource.", "type": "string"}, "displayName": {"description": "DisplayName is the human-readable name displayed in the UI for this resource.", "type": "string"}, "inheritedClusterRoles": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.GlobalRoleInheritedclusterroles"}, "description": "InheritedClusterRoles are the names of RoleTemplates whose permissions are granted by this GlobalRole in every cluster besides the local cluster. To grant permissions in the local cluster, use the Rules field.", "manifests_processed": true}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "metadata": {"type": "object", "description": ""}, "newUserDefault": {"description": "NewUserDefault specifies that all new users created should be bound to this GlobalRole if true.", "type": "boolean"}, "rules": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.GlobalRoleRules"}, "description": "Rules holds a list of PolicyRules that are applied to the local cluster only.", "manifests_processed": true}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "GlobalRole"}]}, "io.cattle.management.v3.GlobalRoleInheritedclusterroles": {"description": "InheritedClusterRoles are the names of RoleTemplates whose permissions are granted by this GlobalRole in every cluster besides the local cluster. To grant permissions in the local cluster, use the Rules field.", "items": {"type": "string"}, "type": "array"}, "io.cattle.management.v3.GlobalRoleRules": {"description": "Rules holds a list of PolicyRules that are applied to the local cluster only.", "items": {"description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", "properties": {"apiGroups": {"description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.", "items": {"type": "string"}, "type": "array"}, "nonResourceURLs": {"description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.", "items": {"type": "string"}, "type": "array"}, "resourceNames": {"description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.", "items": {"type": "string"}, "type": "array"}, "resources": {"description": "Resources is a list of resources this rule applies to. '*' represents all resources.", "items": {"type": "string"}, "type": "array"}, "verbs": {"description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.", "items": {"type": "string"}, "type": "array"}}, "required": ["verbs"], "type": "object"}, "type": "array"}, "io.cattle.management.v3.RoleTemplate": {"description": "RoleTemplate holds configuration for a template that is used to create kubernetes Roles and ClusterRoles (in the rbac.authorization.k8s.io group) for a cluster or project.", "properties": {"administrative": {"description": "Administrative if false, and context is set to cluster this RoleTemplate will not grant access to \"CatalogTemplates\" and \"CatalogTemplateVersions\" for any project in the cluster. Default is false.", "type": "boolean"}, "apiVersion": {"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources", "type": "string"}, "builtin": {"description": "Builtin if true specifies that this RoleTemplate was created by Rancher and is immutable. Default to false.", "type": "boolean"}, "clusterCreatorDefault": {"description": "ClusterCreatorDefault if true, a binding with this RoleTemplate will be created for a users when they create a new cluster. ClusterCreatorDefault is only evaluated if the context of the RoleTemplate is set to cluster. Default to false.", "type": "boolean"}, "context": {"description": "Context describes if the roleTemplate applies to clusters or projects. Valid values are \"project\", \"cluster\" or \"\".", "enum": ["project", "cluster", ""], "type": "string"}, "description": {"description": "Description holds text that describes the resource.", "type": "string"}, "displayName": {"description": "DisplayName is the human-readable name displayed in the UI for this resource.", "type": "string"}, "external": {"description": "External if true specifies that rules for this RoleTemplate should be gathered from a ClusterRole with the matching name. If set to true the Rules on the template will not be evaluated. External's value is only evaluated if the RoleTemplate's context is set to \"cluster\" Default to false.", "type": "boolean"}, "hidden": {"description": "Hidden if true informs the Rancher UI not to display this RoleTemplate. Default to false.", "type": "boolean"}, "kind": {"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds", "type": "string"}, "locked": {"description": "Locked if true, new bindings will not be able to use this RoleTemplate. Default to false.", "type": "boolean"}, "metadata": {"type": "object", "description": ""}, "projectCreatorDefault": {"description": "ProjectCreatorDefault if true, a binding with this RoleTemplate will be created for a user when they create a new project. ProjectCreatorDefault is only evaluated if the context of the RoleTemplate is set to project. Default to false.", "type": "boolean"}, "roleTemplateNames": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.RoleTemplateRoletemplatenames"}, "description": "RoleTemplateNames list of RoleTemplate names that this RoleTemplate will inherit. This RoleTemplate will grant all rules defined in an inherited RoleTemplate. Inherited RoleTemplates must already exist.", "manifests_processed": true}, "rules": {"type": "array", "items": {"$ref": "#/definitions/io.cattle.management.v3.RoleTemplateRules"}, "description": "Rules hold all the PolicyRules for this RoleTemplate.", "manifests_processed": true}}, "type": "object", "x-kubernetes-group-version-kind": [{"group": "io.cattle.management", "version": "v3", "kind": "RoleTemplate"}]}, "io.cattle.management.v3.RoleTemplateRoletemplatenames": {"description": "RoleTemplateNames list of RoleTemplate names that this RoleTemplate will inherit. This RoleTemplate will grant all rules defined in an inherited RoleTemplate. Inherited RoleTemplates must already exist.", "items": {"type": "string"}, "type": "array"}, "io.cattle.management.v3.RoleTemplateRules": {"description": "Rules hold all the PolicyRules for this RoleTemplate.", "items": {"description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.", "properties": {"apiGroups": {"description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.", "items": {"type": "string"}, "type": "array"}, "nonResourceURLs": {"description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.", "items": {"type": "string"}, "type": "array"}, "resourceNames": {"description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.", "items": {"type": "string"}, "type": "array"}, "resources": {"description": "Resources is a list of resources this rule applies to. '*' represents all resources.", "items": {"type": "string"}, "type": "array"}, "verbs": {"description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.", "items": {"type": "string"}, "type": "array"}}, "required": ["verbs"], "type": "object"}, "type": "array"}}}